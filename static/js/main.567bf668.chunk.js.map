{"version":3,"sources":["components/AddTask/AddTask.js","components/DeleteTask/DeleteTask.js","components/EditTask/EditTask.js","components/ViewTask/ViewTask.js","components/ListTask/ListTask.js","components/Container/Container.js","serviceWorker.js","index.js"],"names":["AddTask","handleClose","bind","handleShow","handleAdd","state","show","title","error","this","setState","document","getElementById","value","fetch","method","body","JSON","stringify","headers","then","response","json","className","Modal","onHide","Header","Title","type","onClick","Body","id","Component","handleDelete","props","item","res","readOnly","handleEdit","defaultValue","num","ListTask","isLoaded","items","currentItem","addChild","React","createRef","deleteChild","editChild","viewChild","addShow","deleteShow","editShow","viewShow","result","data","getTasks","current","e","Object","assign","currentTarget","dataset","findIndex","el","count","message","map","key","data-id","data-title","ref","Container","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.567bf668.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './AddTask.css'\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass AddTask extends Component {\r\n  constructor(){\r\n    super()\r\n    this.handleClose = this.handleClose.bind(this)\r\n    this.handleShow = this.handleShow.bind(this)\r\n    this.handleAdd = this.handleAdd.bind(this)\r\n    this.state = {\r\n      show : false,\r\n      title : '',\r\n      error: false\r\n    }\r\n  }\r\n\r\n  handleClose(){\r\n    this.setState({\r\n      show : false\r\n    })\r\n  }\r\n\r\n  handleShow(){\r\n    this.setState({\r\n      show : true\r\n    })\r\n  }\r\n\r\n  handleAdd(){\r\n    this.setState({\r\n      title : document.getElementById('inputTask').value\r\n    })\r\n    fetch(\"https://test.megapolis-it.ru/api/list\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n        title: document.getElementById('inputTask').value\r\n      }),\r\n    headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then( () => {\r\n      if (!this.state.title) {\r\n        this.setState({\r\n          error : true\r\n        })\r\n      } else {\r\n        this.setState({\r\n          error : false\r\n        })\r\n        this.handleClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n          <Modal show={this.state.show} onHide={this.handleClose}>\r\n            <Modal.Header>\r\n              <Modal.Title>Краткое описание</Modal.Title>\r\n              <button type=\"button\" className=\"Task-button close\" onClick = {this.handleClose}></button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <form>\r\n                  <div className=\"form-group no-margin\">\r\n                      <input type=\"text\" className=\"form-control\" id=\"inputTask\"></input>\r\n                  </div>\r\n                  {this.state.error &&\r\n                  <span className=\"error\">Заголовок не может быть пустым</span>\r\n                  }\r\n                  <button type=\"button\" onClick={this.handleAdd} className=\"btn btn-success btn-add\">Создать</button>\r\n              </form>\r\n            </Modal.Body>\r\n          </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React, { Component } from 'react'\r\nimport './DeleteTask.css'\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass AddTask extends Component {\r\n  constructor(){\r\n    super()\r\n    this.handleClose = this.handleClose.bind(this)\r\n    this.handleShow = this.handleShow.bind(this)\r\n    this.handleDelete = this.handleDelete.bind(this)\r\n    this.state = {\r\n      show : false\r\n    }\r\n  }\r\n\r\n  handleClose(){\r\n    this.setState({\r\n      show : false\r\n    })\r\n  }\r\n\r\n  handleShow(){\r\n    this.setState({\r\n      show : true\r\n    })\r\n  }\r\n\r\n  handleDelete(){\r\n    fetch('https://test.megapolis-it.ru/api/list/' + this.props.item.id, {\r\n      method: 'DELETE',\r\n    })\r\n    .then(res => res.json())\r\n\r\n    this.handleClose()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n          <Modal show={this.state.show} onHide={this.handleClose}>\r\n            <Modal.Header>\r\n              <Modal.Title>Краткое описание</Modal.Title>\r\n              <button type=\"button\" className=\"Task-button close\" onClick = {this.handleClose}></button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <form>\r\n                  <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control disabled\" value={this.props.item.title} readOnly></input>\r\n                  </div>\r\n                  <button type=\"button\" onClick={this.handleDelete} className=\"btn btn-success btn-delete\">Удалить</button>\r\n              </form>\r\n            </Modal.Body>\r\n          </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React, { Component } from 'react'\r\nimport './EditTask.css'\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass AddTask extends Component {\r\n  constructor(){\r\n    super()\r\n    this.handleClose = this.handleClose.bind(this)\r\n    this.handleShow = this.handleShow.bind(this)\r\n    this.handleEdit = this.handleEdit.bind(this)\r\n    this.state = {\r\n      show : false\r\n    }\r\n  }\r\n\r\n  handleClose(){\r\n    this.setState({\r\n      show : false\r\n    })\r\n  }\r\n\r\n  handleShow(){\r\n    this.setState({\r\n      show : true\r\n    })\r\n  }\r\n\r\n  handleEdit(){\r\n    fetch('https://test.megapolis-it.ru/api/list/' + this.props.item.id, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n          title: document.getElementById('editTask').value,\r\n        }),\r\n      headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n\r\n    this.handleClose()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n          <Modal show={this.state.show} onHide={this.handleClose}>\r\n            <Modal.Header>\r\n              <Modal.Title>Краткое описание</Modal.Title>\r\n              <button type=\"button\" className=\"Task-button close\" onClick = {this.handleClose}></button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <form>\r\n                  <div className=\"form-group\">\r\n                      <input type=\"text\" className=\"form-control\" id=\"editTask\" defaultValue={this.props.item.title}></input>\r\n                  </div>\r\n                  <button type=\"button\" onClick={this.handleEdit} className=\"btn btn-success\">Изменить</button>\r\n              </form>\r\n            </Modal.Body>\r\n          </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React, { Component } from 'react'\r\nimport './ViewTask.css'\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass AddTask extends Component {\r\n  constructor(){\r\n    super()\r\n    this.handleClose = this.handleClose.bind(this)\r\n    this.handleShow = this.handleShow.bind(this)\r\n    this.state = {\r\n      show : false\r\n    }\r\n  }\r\n\r\n  handleClose(){\r\n    this.setState({\r\n      show : false\r\n    })\r\n  }\r\n\r\n  handleShow(){\r\n    this.setState({\r\n      show : true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n          <Modal className=\"fullscreen\" show={this.state.show} onHide={this.handleClose}>\r\n            <h3 className=\"MainTitle\">Задача №{this.props.item.num}</h3>\r\n            <Modal.Header>\r\n              <Modal.Title>Краткое описание</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <form>\r\n                  <div className=\"form-group\">\r\n                      <div className=\"form-control disabled\">{this.props.item.title}</div>\r\n                  </div>\r\n                  <button type=\"button\" onClick={this.handleClose} className=\"btn btn-primary\">Вернуться в список</button>\r\n              </form>\r\n            </Modal.Body>\r\n          </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React, { Component } from 'react'\r\nimport './ListTask.css'\r\nimport AddTask from '../AddTask/AddTask'\r\nimport DeleteTask from '../DeleteTask/DeleteTask'\r\nimport EditTask from '../EditTask/EditTask'\r\nimport ViewTask from '../ViewTask/ViewTask'\r\n\r\nclass ListTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      currentItem: {\r\n        id: null,\r\n        title: null,\r\n        num: null\r\n      }\r\n    };\r\n    this.addChild = React.createRef();\r\n    this.deleteChild = React.createRef();\r\n    this.editChild = React.createRef();\r\n    this.viewChild = React.createRef();\r\n    this.addShow = this.addShow.bind(this);\r\n    this.deleteShow = this.deleteShow.bind(this);\r\n    this.editShow = this.editShow.bind(this);\r\n    this.viewShow = this.viewShow.bind(this);\r\n  }\r\n\r\n  getTasks() {\r\n    fetch(\"https://test.megapolis-it.ru/api/list\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: result.data\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTasks()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.getTasks()\r\n  }\r\n\r\n  addShow(){\r\n    this.addChild.current.handleShow();\r\n  }\r\n\r\n  deleteShow(e){\r\n    this.deleteChild.current.handleShow();\r\n    this.setState(Object.assign(\r\n      this.state.currentItem,\r\n      {id: e.currentTarget.dataset.id, title: e.currentTarget.dataset.title}\r\n      )\r\n    );\r\n  }\r\n\r\n  editShow(e){\r\n    this.editChild.current.handleShow();\r\n    this.setState(Object.assign(\r\n      this.state.currentItem,\r\n      {id: e.currentTarget.dataset.id, title: e.currentTarget.dataset.title}\r\n      )\r\n    );\r\n  }\r\n\r\n  viewShow(e){\r\n    let index = this.state.items.findIndex(el => el.id === +e.currentTarget.dataset.id);\r\n    let num = index + 1;\r\n    this.setState(Object.assign(\r\n      this.state.currentItem,\r\n      {id: e.currentTarget.dataset.id, title: e.currentTarget.dataset.title, num: num}\r\n      )\r\n    );\r\n    this.viewChild.current.handleShow();\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    let count = 1;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Загрузка...</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-8\">\r\n            <h3 className=\"MainTitle\">Список задач</h3>\r\n          </div>\r\n          <div className=\"col-sm-4\">\r\n            <button type=\"button\" className=\"btn btn-success AddTask-button\" onClick = {this.addShow}>Добавить</button>\r\n          </div>\r\n          <div className=\"col-sm-12 ListTask\">\r\n            <ul className=\"list-group\">\r\n              {items.map(item => (\r\n                <li key={item.id} className=\"list-group-item\">\r\n                  <div data-id={item.id} data-title={item.title} onClick = {this.viewShow}>Задача №{count++}</div>\r\n                  <div data-id={item.id} data-title={item.title} onClick = {this.viewShow}>{item.title}</div>\r\n                  <div>\r\n                    <button type=\"button\" data-id={item.id} data-title={item.title} className=\"Task-button DeleteTask-button\" onClick = {this.deleteShow}></button>\r\n                    <button type=\"button\" data-id={item.id} data-title={item.title} className=\"Task-button EditTask-button\" onClick = {this.editShow}></button>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <AddTask ref = {this.addChild}/>\r\n          <DeleteTask ref = {this.deleteChild} item = {this.state.currentItem}/>\r\n          <EditTask ref = {this.editChild} item = {this.state.currentItem}/>\r\n          <ViewTask ref = {this.viewChild} item = {this.state.currentItem}/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ListTask;","import React, { Component } from 'react'\r\nimport './Container.css'\r\nimport List from '../ListTask/ListTask.js'\r\n\r\nclass Container extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <List></List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Container from './components/Container/Container.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Container />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}